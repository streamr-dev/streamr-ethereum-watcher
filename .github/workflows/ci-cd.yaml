name: CI & CD
on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master

jobs:
  integration:
    name: CI
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - 14.x
        os:
          - ubuntu-16.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Node ${{ matrix.node_version }} - x64 on ${{ matrix.os }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node_version }}
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Test
        run: |
          npm ci
          npm run lint
          npm test
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.4.1
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          tags: docker.io/streamr/ethereum-watcher:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  delivery:
    name: CD
    if: github.event_name != 'pull_request'
    needs:
      - integration
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.4.1
        id: buildx
        with:
          driver-opts: |
            network=host
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.4.1
        with:
          images: streamr/ethereum-watcher
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern=v{{version}}
            type=raw,value=dev
      - name: Build local Docker image for running smoke tests
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          tags: streamr/ethereum-watcher:dev
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Start Streamr Docker Stack
#        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
#        with:
#          services-to-start: "core-api nginx ethereum-watcher"
#      - name: Run Smoke test
#        run: |
#          wait_time=10;
#          for (( i=0; i < 5; i=i+1 )); do
#            docker logs streamr-dev-ethereum-watcher > out.txt
#            grep -q "Connected to Ethereum network" out.txt
#            res=$?
#            if test "$res" != "0"; then
#              echo "Attempting to connect to Ethereum-Watcher retrying in $wait_time seconds"
#              sleep $wait_time
#              wait_time=$(( 2*wait_time ))
#            else
#              break
#            fi
#          done
#          set -e
#          grep -q "Connected to Ethereum network" out.txt
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container to Docker Hub
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          load: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
